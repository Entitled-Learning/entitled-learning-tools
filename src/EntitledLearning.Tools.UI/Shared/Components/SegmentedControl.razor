@inherits InputBase<string[]>

<div class="segmented-control">
    @if (Segments is not null)
        @foreach (var segment in Segments)
         {
            <button class="@GetButtonClass(segment)" @onclick="() => SelectSegment(segment)">
                @segment
            </button>
         }
</div>

@code {
    [Parameter] public string[]? Segments { get; set; }
    private string? selectedSegment;

    private string GetButtonClass(string segment) =>
        segment == selectedSegment ? "selected" : "";

    private void SelectSegment(string segment)
    {
        selectedSegment = segment;
        CurrentValue = new string[] { segment };
        StateHasChanged();
    }

    // Implement the TryParseValueFromString method
    protected override bool TryParseValueFromString(string? value, out string[] result, out string validationErrorMessage)
    {
        Guard.IsNotNull(value);

        // Your custom parsing logic here
        // Example: Split the input string by a delimiter
        result = value.Split(',');
        validationErrorMessage = "some error"; // Set to an error message if the parsing fails

        return true; // Return false if parsing fails
    }
}
