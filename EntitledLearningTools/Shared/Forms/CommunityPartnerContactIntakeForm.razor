@inject NavigationManager NavManager
@inject CommunityPartnerContactRepository _db
@inject CommunityPartnerRepository _partnerDb

<div class="my-4">
    <EditForm Model="@communityPartnerContact" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <div class="flex flex-wrap mb-6">

                <div class="w-full md:w-1/12 pr-3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="Prefix">Prefix</label>
                    <InputText id="Prefix" @bind-Value="communityPartnerContact.Prefix" class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.Prefix)" />
                </div>

                <div class="w-full md:w-4/12 pr-3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="FirstName">FirstName</label>
                    <InputText id="FirstName" @bind-Value="communityPartnerContact.FirstName" class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.FirstName)" />
                </div>

                <div class="w-full md:w-2/12 pr-3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="MiddleName">MiddleName</label>
                    <InputText id="MiddleName" @bind-Value="communityPartnerContact.MiddleName" class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.MiddleName)" />
                </div>

                <div class="w-full md:w-4/12 pr-3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="LastName">LastName</label>
                    <InputText id="LastName" @bind-Value="communityPartnerContact.LastName" class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.LastName)" />
                </div>

                <div class="w-full md:w-1/12 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="Suffix">Suffix</label>
                    <InputText id="Suffix" @bind-Value="communityPartnerContact.Suffix" class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.Suffix)" />
                </div>
            </div>

            <div class="flex flex-wrap mb-6">
                <div class="w-full">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="CommunityPartnerName">
                        CommunityPartner Name
                    </label>
                    <InputSelect id="CommunityPartnerName" class="form-input" @bind-Value="communityPartnerContact.CommunityPartnerName">
                        @if(communityPartnerList is not null) {
                            <option value="N/A">select community partner</option>
                            @foreach (var item in communityPartnerList)
                            {
                                <option value="@item">@item</option>
                            }
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => communityPartnerContact.CommunityPartnerName)" />
                </div>
            </div>

            <div class="flex flex-wrap mb-6">
                <div class="w-full md:w-1/3 pr-3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="OfficePhoneNumber">
                        Office Phone Number
                    </label>
                    <InputText id="OfficePhoneNumber" @bind-Value="communityPartnerContact.OfficePhoneNumber"
                        class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.OfficePhoneNumber)" />
                </div>

                <div class="w-full md:w-1/3 pr-3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="CellPhoneNumber">
                        Cell Phone Number
                    </label>
                    <InputText id="CellPhoneNumber" @bind-Value="communityPartnerContact.CellPhoneNumber"
                        class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.CellPhoneNumber)" />
                </div>

                <div class="w-full md:w-1/3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="EmailAddress">
                        Email Address
                    </label>
                    <InputText id="EmailAddress" @bind-Value="communityPartnerContact.EmailAddress"
                        class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.EmailAddress)" />
                </div>
            </div>

            <div class="flex flex-wrap mb-6">
                <div class="w-full">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="AddressLine1">
                        Address Line 1
                    </label>
                    <InputText id="AddressLine1" @bind-Value="communityPartnerContact.AddressLine1"
                        class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.AddressLine1)" />
                </div>
            </div>

            <div class="flex flex-wrap mb-6">
                <div class="w-full">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2"
                        for="AddressLine2">
                        Address Line 2
                    </label>
                    <InputText id="AddressLine2" @bind-Value="communityPartnerContact.AddressLine2"
                        class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.AddressLine2)" />
                </div>
            </div>

            <div class="flex flex-wrap mb-6">
                <div class="w-full md:w-1/3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="City">
                        City
                    </label>
                    <InputText id="City" @bind-Value="communityPartnerContact.City" class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.City)" />
                </div>

                <div class="w-full md:w-1/3 px-3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="State">
                        State
                    </label>
                    <InputSelect id="State" class="form-input" Options="@states" @bind-Value="communityPartnerContact.State">
                        <option value="N/A">select state</option>
                        @foreach (var item in states)
                        {
                            <option value="@item">@item</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => communityPartnerContact.State)" />
                </div>

                <div class="w-full md:w-1/3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="ZipCode">
                        ZipCode
                    </label>
                    <InputText id="ZipCode" @bind-Value="communityPartnerContact.ZipCode" class="form-input" />
                    <ValidationMessage For="@(() => communityPartnerContact.ZipCode)" />
                </div>
            </div>

        </div>

        <button type="submit" class="btn btn-primary my-4">Save</button>
    </EditForm>
</div>

@code {
    private CommunityPartnerContact communityPartnerContact = new CommunityPartnerContact();
    private IEnumerable<CommunityPartnerStorageContractV1>? communityPartners;
    private DataMapper mapper = new DataMapper();
    private string[] states = new string[] { "Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming" };
    private string[]? communityPartnerList; 

    protected override async Task OnInitializedAsync()
    {
        communityPartnerContact.initWithTestData();
        communityPartners = await _partnerDb.GetAllAsync();

        if (communityPartners != null) {
            communityPartnerList = communityPartners.Select(x => x.Name).ToArray()!;
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            var storageContract = mapper.ToCommunityPartnerContactStorageContractV1(communityPartnerContact);
            await _db.AddAsync(storageContract);
            //NavManager.NavigateTo("/communitypartnerlist");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }
    }
}
