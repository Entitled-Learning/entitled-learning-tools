@page "/community-partner/{partnerName}"
@inject CommunityPartnerRepository _db
@inject CommunityPartnerContactRepository _contactDB
@inject IJSRuntime JSRuntime
@inject DialogService DialogService

<AuthorizeView>
    <Authorized>
        <section class="flex flex-col p-4 w-full">
            <RadzenBreadCrumb class="mb-8">
                <RadzenBreadCrumbItem Path="/explore-data" Text="Data Exploer" />
                <RadzenBreadCrumbItem Icon="" Text="@_partner.Name" />
            </RadzenBreadCrumb>

            <div class="flex flex-col">
                <div class="mb-8">
                    <h1 class="text-2xl font-bold leading-loose">@_partner.Name</h1>
                    @if (!string.IsNullOrEmpty(_partner.AddressLine1)) {
                        <h2>@_partner.AddressLine1</h2>
                    }
                    @if (!string.IsNullOrEmpty(_partner.AddressLine2)) {
                        <h2>@_partner.AddressLine2</h2>
                    }
                    @if (!string.IsNullOrEmpty(_partner.City) && !string.IsNullOrEmpty(_partner.State) && !string.IsNullOrEmpty(_partner.ZipCode)) {
                        <h2>@_partner.City, @_partner.State @_partner.ZipCode</h2>
                    }
                </div>

                <h1 class="text-lg font-bold leading-loose">Contacts</h1>
                <a href="/add-data?option=CommunityPartnerContacts" class="mr-2 mb-4">
                    <RadzenButton Text="Add Contact" Icon="add" ButtonStyle="ButtonStyle.Primary" />
                </a>
                <RadzenDataGrid AllowFiltering="false" AllowColumnResize="true" AllowAlternatingRows="false"
                    FilterMode="FilterMode.SimpleWithMenu" AllowSorting="true"  AllowPaging="false"
                    PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="false" Data="@_contacts"
                    TItem="CommunityPartnerContactStorageContractV1" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or"
                    SelectionMode="DataGridSelectionMode.Single">
                    <Columns>
                        <RadzenDataGridColumn TItem="CommunityPartnerContactStorageContractV1" Title="Name" Width="200px" >
                            <Template Context="contact">
                                @contact.Prefix @contact.FirstName @contact.MiddleName @contact.LastName @contact.Suffix
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="CommunityPartnerContactStorageContractV1" Property="CellPhoneNumber" Title="Cell Phone Number" Width="200px" />
                        <RadzenDataGridColumn TItem="CommunityPartnerContactStorageContractV1" Property="EmailAddress" Title="Email" Width="200px" />
                        <RadzenDataGridColumn TItem="CommunityPartnerContactStorageContractV1" Property="AddressLine1" Title="Address Line 1" Width="120px" />
                        <RadzenDataGridColumn TItem="CommunityPartnerContactStorageContractV1" Property="AddressLine2" Title="Address Line 2" Width="160px" />
                        <RadzenDataGridColumn TItem="CommunityPartnerContactStorageContractV1" Property="City" Title="City" Width="160px" />
                        <RadzenDataGridColumn TItem="CommunityPartnerContactStorageContractV1" Property="State" Title="State" Width="160px" />
                        <RadzenDataGridColumn TItem="CommunityPartnerContactStorageContractV1" Property="ZipCode" Title="Zipcode" Width="160px" />
                    </Columns>
                </RadzenDataGrid>
            </div>            
        </section>
    </Authorized>
    <NotAuthorized>
        <h1 class="text-2xl leading-loose">Please Log in to access this page</h1>
    </NotAuthorized>
</AuthorizeView>


@code {
    [Parameter] public string? partnerName { get; set; }
    private CommunityPartnerStorageContractV1 _partner = new CommunityPartnerStorageContractV1();
    private IEnumerable<CommunityPartnerContactStorageContractV1> _contacts = new List<CommunityPartnerContactStorageContractV1>();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync(); 
    }
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        if(partnerName is not null){
            _partner = await _db.GetByIdAsync(partnerName);
            _contacts = await _contactDB.GetByPartnerNameAsync(partnerName);
        }
    }
}