<AuthorizeView>
    <Authorized>
        <nav class="flex fixed top-0 w-full items-normal md:items-center h-16 px-4" style="background: rgba(247, 248, 252, 1);">
            <div class="flex flex-wrap items-center w-full justify-between">
                @if(Authorized){
                    <a class="site-name flex items-center pr-4 cursor-pointer">
                        <RadzenButton class="bg-transparent text-black" Icon="menu" Click="ToggleDrawer" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Large"/>
                    </a>    
                }
                <div class="flex items-center md:order-2">
                    <LoginDisplay />
                </div>
            </div>
        </nav>
    </Authorized>
    <NotAuthorized>
        <nav class="flex fixed top-0 w-full items-normal md:items-center h-16 px-4" style="background: rgba(0, 0, 0, 1);">
            <div class="flex flex-wrap items-center w-full justify-between">
                @if(Authorized){
                    <a class="site-name flex items-center pr-4 cursor-pointer">
                        <RadzenButton class="bg-transparent" Icon="menu" Click="ToggleDrawer" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Large"/>
                    </a>    
                }
                <div class="flex items-center md:order-2">
                    <LoginDisplay />
                </div>
            </div>
        </nav>
    </NotAuthorized>
</AuthorizeView>

<SideDrawer IsOpen="@_isOpen" ParentChangeHandler="@ToggleDrawer"/>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public bool Authorized { get; set; } = true;

    private bool _isOpen = false;

    private void ToggleDrawer()
    {
        _isOpen = !_isOpen;
    }
}  
