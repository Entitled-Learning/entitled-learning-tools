@inject NavigationManager NavManager
@inject CommunityPartnerRepository _db

<div class="my-4">
    <EditForm Model="@communityPartner" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="form-group">
            <div class="flex flex-wrap mb-6">
                <div class="w-full">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="Name">
                        Name
                    </label>
                    <InputText id="Name" @bind-Value="communityPartner.Name" class="form-input" />
                    <ValidationMessage For="@(() => communityPartner.Name)" />
                </div>
            </div>

            <div class="flex flex-wrap mb-6">
                <div class="w-full md:w-1/2 pr-3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="PhoneNumber">
                        PhoneNumber
                    </label>
                    <InputText id="PhoneNumber" @bind-Value="communityPartner.PhoneNumber" class="form-input" />
                    <ValidationMessage For="@(() => communityPartner.PhoneNumber)" />
                </div>

                <div class="w-full md:w-1/2 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="EmailAddress">
                        EmailAddress
                    </label>
                    <InputText id="EmailAddress" @bind-Value="communityPartner.EmailAddress" class="form-input" />
                    <ValidationMessage For="@(() => communityPartner.EmailAddress)" />
                </div>
            </div>

            <div class="flex flex-wrap mb-6">
                <div class="w-full">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="AddressLine1">
                        AddressLine1
                    </label>
                    <InputText id="AddressLine1" @bind-Value="communityPartner.AddressLine1" class="form-input" />
                    <ValidationMessage For="@(() => communityPartner.AddressLine1)" />
                </div>
            </div>

            <div class="flex flex-wrap mb-6">
                <div class="w-full">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="AddressLine2">
                        AddressLine2
                    </label>
                    <InputText id="AddressLine2" @bind-Value="communityPartner.AddressLine2" class="form-input" />
                    <ValidationMessage For="@(() => communityPartner.AddressLine2)" />
                </div>
            </div>

            <div class="flex flex-wrap mb-6">
                <div class="w-full md:w-1/3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="City">
                        City
                    </label>
                    <InputText id="City" @bind-Value="communityPartner.City" class="form-input" />
                    <ValidationMessage For="@(() => communityPartner.City)" />
                </div>

                <div class="w-full md:w-1/3 px-3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="State">
                        State
                    </label>
                    <InputSelect id="State" class="form-input" Options="@states" @bind-Value="communityPartner.State">
                        @foreach (var item in states)
                        {
                            <option value="@item">@item</option>
                        }
                    </InputSelect>  
                    <ValidationMessage For="@(() => communityPartner.State)" />
                </div>

                <div class="w-full md:w-1/3 mb-6 md:mb-0">
                    <label class="block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2" for="ZipCode">
                        ZipCode
                    </label>
                    <InputText id="ZipCode" @bind-Value="communityPartner.ZipCode" class="form-input" />
                    <ValidationMessage For="@(() => communityPartner.ZipCode)" />
                </div>
            </div>
        </div>

        <button type="submit" class="btn btn-primary my-4">Save</button>
    </EditForm>
</div>

@code {
    private EntitledLearningTools.Models.CommunityPartner communityPartner = new EntitledLearningTools.Models.CommunityPartner();
    private DataMapper mapper = new DataMapper();
    private string[] states = new string[] { "Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming" };
    private string selectedState = "Texas";
    private async Task HandleValidSubmit()
    {
        try
        {
            var storageContract = mapper.ToCommunityPartnerStorageContractV1(communityPartner);
            await _db.AddAsync(storageContract);
            NavManager.NavigateTo("/community-partners");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }

    }
}
